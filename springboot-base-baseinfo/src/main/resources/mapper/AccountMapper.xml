<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.scnu.baseinfo.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.edu.scnu.baseinfo.bean.Account">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="acc_id" jdbcType="INTEGER" property="accId" />
    <result column="acc_sys_type" jdbcType="CHAR" property="accSysType" />
    <result column="acc_user_type" jdbcType="CHAR" property="accUserType" />
    <result column="acc_name" jdbcType="VARCHAR" property="accName" />
    <result column="acc_icon" jdbcType="VARCHAR" property="accIcon" />
    <result column="acc_remark" jdbcType="VARCHAR" property="accRemark" />
    <result column="acc_amount" jdbcType="DECIMAL" property="accAmount" />
    <result column="acc_has_child" jdbcType="BIT" property="accHasChild" />
    <result column="acc_can_pay" jdbcType="BIT" property="accCanPay" />
    <result column="acc_can_transfer" jdbcType="BIT" property="accCanTransfer" />
    <result column="acc_parent_id" jdbcType="INTEGER" property="accParentId" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    `acc_id`, `acc_sys_type`, `acc_user_type`, `acc_name`, `acc_icon`, `acc_remark`, 
    `acc_amount`, `acc_has_child`, `acc_can_pay`, `acc_can_transfer`, `acc_parent_id`, 
    `is_del`
  </sql>
  <select id="selectByExample" parameterType="com.edu.scnu.baseinfo.bean.AccountExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zw_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.edu.scnu.baseinfo.bean.AccountExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from zw_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.edu.scnu.baseinfo.bean.AccountExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from zw_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update zw_account
    <set>
      <if test="record.accId != null">
        `acc_id` = #{record.accId,jdbcType=INTEGER},
      </if>
      <if test="record.accSysType != null">
        `acc_sys_type` = #{record.accSysType,jdbcType=CHAR},
      </if>
      <if test="record.accUserType != null">
        `acc_user_type` = #{record.accUserType,jdbcType=CHAR},
      </if>
      <if test="record.accName != null">
        `acc_name` = #{record.accName,jdbcType=VARCHAR},
      </if>
      <if test="record.accIcon != null">
        `acc_icon` = #{record.accIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.accRemark != null">
        `acc_remark` = #{record.accRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.accAmount != null">
        `acc_amount` = #{record.accAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.accHasChild != null">
        `acc_has_child` = #{record.accHasChild,jdbcType=BIT},
      </if>
      <if test="record.accCanPay != null">
        `acc_can_pay` = #{record.accCanPay,jdbcType=BIT},
      </if>
      <if test="record.accCanTransfer != null">
        `acc_can_transfer` = #{record.accCanTransfer,jdbcType=BIT},
      </if>
      <if test="record.accParentId != null">
        `acc_parent_id` = #{record.accParentId,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        `is_del` = #{record.isDel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update zw_account
    set `acc_id` = #{record.accId,jdbcType=INTEGER},
      `acc_sys_type` = #{record.accSysType,jdbcType=CHAR},
      `acc_user_type` = #{record.accUserType,jdbcType=CHAR},
      `acc_name` = #{record.accName,jdbcType=VARCHAR},
      `acc_icon` = #{record.accIcon,jdbcType=VARCHAR},
      `acc_remark` = #{record.accRemark,jdbcType=VARCHAR},
      `acc_amount` = #{record.accAmount,jdbcType=DECIMAL},
      `acc_has_child` = #{record.accHasChild,jdbcType=BIT},
      `acc_can_pay` = #{record.accCanPay,jdbcType=BIT},
      `acc_can_transfer` = #{record.accCanTransfer,jdbcType=BIT},
      `acc_parent_id` = #{record.accParentId,jdbcType=INTEGER},
      `is_del` = #{record.isDel,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>